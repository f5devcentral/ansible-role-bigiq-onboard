---

- name: collect secondary bigiq ip address
  set_fact:
    secondary_bigiq_address: "{{ hostvars[item].ansible_host }}"
  with_items: "{{ groups['all'] }}"
  when: not {{ hostvars[item].haprimary | default(True)|bool }}

- name: Wait for BIG-IQ to be available
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/info/system"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
  register: system_status
  until: system_status is success and system_status.json.available|bool
  retries: 15
  delay: 15

- name: Setup provider
  set_fact:
    provider:
      server: "{{ bigiq_onboard_server }}"
      server_port: "{{ bigiq_onboard_server_port }}"
      user: "{{ bigiq_onboard_user }}"
      password: "{{ bigiq_onboard_password }}"
      validate_certs: "{{ bigiq_onboard_validate_certs }}"
      transport: "{{ bigiq_onboard_transport }}"

- name: Get authentication token
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/authn/login"
    method: POST
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    body:
      username: "{{ bigiq_onboard_user }}"
      password: "{{ bigiq_onboard_password }}"
    body_format: json
  register: authtokenonb

- name: Set the token fact if authentication succeeded
  set_fact:
    f5_auth_token: "{{ authtokenonb.json.token.token }}"
  when: authtokenonb is success

- name: Get BIGIQ System Info
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/info/system"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: system_status
  until: system_status is success and system_status.json.available|bool
  retries: 10
  delay: 6

- name: Test authentication (BIGIQ < 7.1)
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/echo"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  when: system_status.json.build is undefined or system_status.json.build is not match("^\D+.[7-].[1-].[0-].*$")

- name: Test authentication (BIGIQ >= 7.1)
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/setup/launch/status"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  when: >
    system_status.json.build is defined and
    system_status.json.build is match("^\D+.[7-].[1-].[0-].*$") and
    not system_status.json.isSystemSetup|bool


- name: Check if system is setup (BIGIQ < 7.1)
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/system/setup"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: setup
  when: system_status.json.build is undefined or system_status.json.build is not match("^\D+.[7-].[1-].[0-].*$")

- name: Check if system is setup (BIGIQ >= 7.1)
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/setup/config"
    timeout: "{{ bigiq_onboard_timeout }}"
    validate_certs: "{{ bigiq_onboard_validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: setup
  when: >
    system_status.json.build is defined and
    system_status.json.build is match("^\D+.[7-].[1-].[0-].*$") and
    not system_status.json.isSystemSetup|bool

- name: include setup-main.yaml (BIGIQ < 7.1)
  include_tasks: setup-main.yaml
  when: >
    system_status.json.build is undefined or
    system_status.json.build is not match("^\D+.[7-].[1-].[0-].*$")

- name: include setup-main-bigiq7_1.yaml (BIGIQ >= 7.1)
  include_tasks: setup-main-bigiq7_1.yaml
  when: >
    system_status.json.build is defined and
    system_status.json.build is match("^\D+.[7-].[1-].[0-].*$")
